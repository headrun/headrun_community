# Generated by Django 4.0.5 on 2022-06-09 12:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='higher order is higher precedence')),
                ('active', models.BooleanField(default=False)),
                ('event_title', models.CharField(max_length=50, null=True)),
                ('event_descript', models.TextField(max_length=500, null=True)),
                ('event_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.CharField(max_length=500)),
                ('team', models.CharField(choices=[('HRH', 'HRH'), ('HRB', 'HRB')], default='HRH', max_length=20)),
                ('posted_username', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_postedby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='higher order is higher precedence')),
                ('active', models.BooleanField(default=False)),
                ('post_type', models.CharField(choices=[('STORY', 'STORY'), ('POST', 'POST')], max_length=30)),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(max_length=500, null=True)),
                ('tags', models.CharField(max_length=50, null=True)),
                ('links', models.URLField(null=True)),
                ('posted_username', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='createdby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='higher order is higher precedence')),
                ('active', models.BooleanField(default=False)),
                ('reaction', models.CharField(choices=[('LIKE', 'LIKE')], default='LIKE', max_length=500)),
                ('reacted_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likedpost', to='community.posts')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='liked_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FileType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='higher order is higher precedence')),
                ('active', models.BooleanField(default=False)),
                ('file_type', models.CharField(choices=[('Photo', 'Photo'), ('Video', 'Video'), ('Text', 'Text')], default='Photo', max_length=20)),
                ('post_file', models.FileField(null=True, upload_to='static/', verbose_name='post_images')),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='postid', to='community.posts')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='higher order is higher precedence')),
                ('active', models.BooleanField(default=False)),
                ('feedback', models.TextField(max_length=500, null=True)),
                ('event_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_feedbackid', to='community.events')),
                ('given_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='given_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='higher order is higher precedence')),
                ('active', models.BooleanField(default=False)),
                ('eventfile_type', models.CharField(choices=[('PHOTO', 'PHOTO'), ('VIDEO', 'VIDEO'), ('AUDIO', 'AUDIO')], default='PHOTO', max_length=20)),
                ('event_file', models.FileField(null=True, upload_to='static/', verbose_name='event_images')),
                ('event_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_user', to='community.events')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='higher order is higher precedence')),
                ('active', models.BooleanField(default=False)),
                ('comment', models.TextField()),
                ('comment_date', models.DateTimeField(auto_now_add=True)),
                ('comment_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_by', to=settings.AUTH_USER_MODEL)),
                ('post_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_id', to='community.posts')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
    ]
